trigger:
  branches:
    include:
      - main
  paths:
    include:
      - host/src/

stages:
  - stage: BuildAndPublish
    jobs:
      - job: BuildAndPublishLinux
        displayName: 'Build and Publish on Linux'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UseDotNet@2
            inputs:
              version: '7.x'

          - task: DotnetCoreCLI@2
            displayName: 'Dotnet Publish'
            inputs:
              command: 'publish'
              publishWebProjects: false
              zipAfterPublish: false
              arguments: '-c Release -r linux-x64 -o $(Build.ArtifactStagingDirectory)/output/linux'
              workingDirectory: $(Build.SourcesDirectory)/host/src/FunctionsNetHost

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)/output/linux'
              artifact: 'output'
              
      - job: BuildAndPublishWindows
        displayName: 'Build and Publish on Windows'
        pool:
          vmImage: 'windows-latest'
        steps:
          - task: UseDotNet@2
            inputs:
              version: '7.x'

          - task: DotnetCoreCLI@2
            displayName: 'Dotnet Publish'
            inputs:
              command: 'publish'
              publishWebProjects: false
              zipAfterPublish: false
              arguments: '-c Release -r win-x64 -o $(Build.ArtifactStagingDirectory)/output/windows'
              workingDirectory: $(Build.SourcesDirectory)/host/src/FunctionsNetHost
          
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)/output/windows'
              artifact: 'output'

  - stage: ConsolidateArtifacts
    displayName: 'Consolidate Artifacts'
    dependsOn: BuildAndPublish
    jobs:
      - job: ConsolidateArtifacts
        displayName: 'Consolidate Artifacts'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifactName: 'output'
              path: '$(Build.ArtifactStagingDirectory)/output'

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Build.ArtifactStagingDirectory)/output'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/consolidated-output'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)/consolidated-output'
              artifact: 'consolidated-output'
